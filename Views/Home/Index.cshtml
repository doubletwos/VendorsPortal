@model IEnumerable<VendorsPortal.Models.Vendor>
@{
	ViewBag.Title = "Home Page";
}
<br />
<body>
	<div class="container">
		@if (Session["vendorId"] != null)
		{
			@Html.ActionLink("Profile", "Details1", "Home", new { id = Model.FirstOrDefault()?.VendorId ?? 0 /* Null case*/}, new { @class = "btn btn-default" })
		}
	</div>
	<div class="container">
		<div class="jumbotron jumbotron-test">
		</div>
	</div>
	<br />
	<div class="jumbotron">
		@using (Html.BeginForm("Index", "Home", FormMethod.Get))
		{
			<div class="form-inline">
				<div class="row">
					<div class="col-md-4">
						<div class="form-group">
							@Html.DropDownList("VendorTypeId", null, string.Empty, htmlAttributes: new { @class = "form-control", @style = "width:300px;" })
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group">
							<input type="text" name="searcharea" class="form-control" placeholder="" id="searcharea" width="500" />
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group">
							<button class="btn btn-default">Search</button>
						</div>
					</div>
				</div>
			</div>
		}
		<br />
		<br />
	</div>
	<table class="table table-condensed table-hover ">
		@foreach (var item in Model)
		{
		<tr>
			<td id="firstcell">
				<div id="businessName"> <strong>  @Html.DisplayFor(modelItem => item.VendorName)</strong></div>
				<br />
				<strong>@Html.DisplayFor(modelItem => item.VendorType.VendorTypeName)</strong> in <strong> @Html.DisplayFor(modelItem => item.Area.AreaName)</strong>
				<br />
				<br />
				<div id="contact">
					<strong><i class="fas fa-phone-alt"></i> </strong> @Html.DisplayFor(modelItem => item.VendorTelephone)
					<br/>
					<strong><i class="fas fa-mobile-alt"></i> </strong> @Html.DisplayFor(modelItem => item.VendorMobile)
				</div>
			</td>

			<td id="secondcell">
				<div id="reviews">
					Reviews will be coming here 
				</div>
				<br />
				<br />
				<div id="buttons">

				

				</div>
			</td>

			<td id="secondcell">
				<div id="image">
					<img src="~/File?id=@item.Files.First(f => f.FileType == VendorsPortal.Models.FileType.Avatar).FileId" alt="avatar" width="100" height="100" class="img-rounded" />
				</div>
				<br />
				<br />
				<div id="buttons">

					@Html.ActionLink("Profile", "Details", new { id = item.VendorId }) | Quote | Email

				</div>
			</td>




		</tr>
		}
	</table>
</body>
@*@using (Html.BeginForm("Index", "Home", FormMethod.Get))
	{
		<div class="form-inline">
			<div class="form-group">
				<label for="email">Vendor Type:</label>
				@Html.DropDownList("VendorTypeId", null, htmlAttributes: new { @class = "form-control" })
				<label for="email">Area:</label>
				<input type="text" name="searchtrade" class="form-control" placeholder="" id="searchtrade" />
				<input type="hidden" id="hfTrade" name="searchtrade" />
				<button type="button" class="btn btn-default">Search</button>
			</div>
		</div>
	}*@
@*<div class="row">
		<div class="col-md-4">
			<h2>Getting started</h2>
			<p>
				ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
				enables a clean separation of concerns and gives you full control over markup
				for enjoyable, agile development.
			</p>
			<p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
		</div>
		<div class="col-md-4">
			<h2>Get more libraries</h2>
			<p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
			<p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
		</div>
		<div class="col-md-4">
			<h2>Web Hosting</h2>
			<p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
			<p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
		</div>
	</div>*@